/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.mainWindow.extended;

import gui.mainWindow.extended.ExpandComponent.MyTableModelListener;

import java.awt.Color;
import java.awt.Container;
import java.awt.Dimension;

import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

import data.*;
/**
 *the bottom part of the mainWindow component
 * @author Ramon
 */
public class ExpandComponent{

    // Variables declaration - do not modify
    private static javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTable jTable1;
    private static javax.swing.JLayeredPane jLayeredPane1;
    private static MyTableModel myTableModel;
    // End of variables declaration
	static AutoUpdateJTable autoJTable;
	private static MyTableModelListener myTableModelListener;
	
    /**
     * Creates new form ExpandJPanel
     */
    public static void initialize() {
        initComponents();
        autoJTable = new AutoUpdateJTable(jTable1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private static void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        myTableModel = new MyTableModel();
        myTableModelListener = new MyTableModelListener();
        
        jTable1.setModel(myTableModel);
        jTable1.setTableHeader(null);
        jTable1.setCellEditor(jTable1.getCellEditor());
        jTable1.setColumnSelectionAllowed(true);
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setEnabled(true);
        jTable1.setFocusable(true);
        jTable1.setMaximumSize(new java.awt.Dimension(370, 30));
        jTable1.setMinimumSize(new java.awt.Dimension(370, 370));
        jTable1.setRowSelectionAllowed(false);
        jTable1.setCellSelectionEnabled(true);
        jTable1.setColumnSelectionAllowed(false);
        jTable1.setRowSorter(null);
        //jTable1.setColumnSelectionInterval(0, 0);
        
        jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jTable1.setIntercellSpacing(new Dimension(0,1));
        jTable1.getModel().addTableModelListener(new MyTableModelListener());
        
        jTable1.setShowHorizontalLines(true);
        jTable1.setShowVerticalLines(false);
        
        jScrollPane1.setViewportView(jTable1);
        jScrollPane1.setBounds(15, 115, 370, 270);
        jScrollPane1.setBackground(new Color(0,0,0,0));
        
        jLayeredPane1.setBackground(new Color(0,0,0,0));
        
    }// </editor-fold>
		/**
     * 
     * @return JScrollPane that contains table
     */
    public static JScrollPane getJScrollPane() {
    	return jScrollPane1;
    }
    
    /**
     * 
     * @return a table that show all tasks
     */
    public static JTable getJTable() {
    	return jTable1;
    }
    
    /**
     * make JTable show some tasks
     * @param tasks tasks that will be displayed
     */
    public static void updateJTable(Task[] tasks) {
    	autoJTable.updateJTable(tasks);
    }
    
    /**
     * make JTable show all tasks
     */
    public static void updateJTable() {
    	autoJTable.updateJTable();
    }
    
    /**
     * 
     * @return all displayed tasks in jtable
     */
    public static Task[] getAllTasks() {
    	return autoJTable.getTasks();
    }
    
    /**
     * 
     * @return tasks selected in jtable
     */
    public static Task[] getSeletedTask() {
   
    	int[] idx = jTable1.getSelectedRows();
    	Task[] tasks = new Task[idx.length];	
    	for(int i=0; i<tasks.length; i++) {
    		tasks[i] = autoJTable.getTasks()[idx[i]];
    	}
    	return tasks;
    }
    
    /**
     * table model that has only 1 column and is not editable.
     * @author Ramon
     *
     */
    static class MyTableModel extends DefaultTableModel{
    	

    	Class[] types = new Class[] { JLabel.class, JLabel.class };
    	
    	MyTableModel() {
    		super(
    			new Object [][] {null},
    			new String [] {"Title 1", "title 2"});
    	}
    	
    	@Override
    	public boolean isCellEditable(int row, int column) {
			return false;
    	}

    	@Override
    	public Class<?> getColumnClass(int columnIndex) {
    		return types[columnIndex];
    	}
    }
    
    static class MyTableModelListener implements TableModelListener {

		@Override
		public void tableChanged(TableModelEvent e) {
			if(jTable1.getRowCount() >= 5)
				minimizeColumn();
			else
				maximizeColumn();
		}
    }
    
    private static void minimizeColumn() {
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(326);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(25);
    	
    }
    
    private static void maximizeColumn() {
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(343);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(25);
    	
    }
}
